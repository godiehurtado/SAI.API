//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// Microsoft.VSDesigner generó automáticamente este código fuente, versión=4.0.30319.42000.
// 
#pragma warning disable 1591

namespace ColpatriaSAI.Servicios.Web.wsIntegrador {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="WsIntegradorSoap", Namespace="http://tempuri.org/")]
    public partial class WsIntegrador : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AIX_WEBOperationCompleted;
        
        private System.Threading.SendOrPostCallback AIXOperationCompleted;
        
        private System.Threading.SendOrPostCallback XML_AIX_WEBOperationCompleted;
        
        private System.Threading.SendOrPostCallback AS4OperationCompleted;
        
        private System.Threading.SendOrPostCallback XML_AS4OperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public WsIntegrador() {
            this.Url = global::ColpatriaSAI.Servicios.Web.Properties.Settings.Default.ColpatriaSAI_Servicios_Web_wsIntegrador_WsIntegrador;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AIX_WEBCompletedEventHandler AIX_WEBCompleted;
        
        /// <remarks/>
        public event AIXCompletedEventHandler AIXCompleted;
        
        /// <remarks/>
        public event XML_AIX_WEBCompletedEventHandler XML_AIX_WEBCompleted;
        
        /// <remarks/>
        public event AS4CompletedEventHandler AS4Completed;
        
        /// <remarks/>
        public event XML_AS4CompletedEventHandler XML_AS4Completed;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AIX_WEB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AIX_WEB(string DataSource, string Company, string Aplication, string DataBase, string Parameters, string IpRequest, string User) {
            object[] results = this.Invoke("AIX_WEB", new object[] {
                        DataSource,
                        Company,
                        Aplication,
                        DataBase,
                        Parameters,
                        IpRequest,
                        User});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AIX_WEBAsync(string DataSource, string Company, string Aplication, string DataBase, string Parameters, string IpRequest, string User) {
            this.AIX_WEBAsync(DataSource, Company, Aplication, DataBase, Parameters, IpRequest, User, null);
        }
        
        /// <remarks/>
        public void AIX_WEBAsync(string DataSource, string Company, string Aplication, string DataBase, string Parameters, string IpRequest, string User, object userState) {
            if ((this.AIX_WEBOperationCompleted == null)) {
                this.AIX_WEBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAIX_WEBOperationCompleted);
            }
            this.InvokeAsync("AIX_WEB", new object[] {
                        DataSource,
                        Company,
                        Aplication,
                        DataBase,
                        Parameters,
                        IpRequest,
                        User}, this.AIX_WEBOperationCompleted, userState);
        }
        
        private void OnAIX_WEBOperationCompleted(object arg) {
            if ((this.AIX_WEBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AIX_WEBCompleted(this, new AIX_WEBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AIX", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AIX(string DataSource, string Company, string Aplication, string DataBase, string Parameters, string IpRequest, string User) {
            object[] results = this.Invoke("AIX", new object[] {
                        DataSource,
                        Company,
                        Aplication,
                        DataBase,
                        Parameters,
                        IpRequest,
                        User});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AIXAsync(string DataSource, string Company, string Aplication, string DataBase, string Parameters, string IpRequest, string User) {
            this.AIXAsync(DataSource, Company, Aplication, DataBase, Parameters, IpRequest, User, null);
        }
        
        /// <remarks/>
        public void AIXAsync(string DataSource, string Company, string Aplication, string DataBase, string Parameters, string IpRequest, string User, object userState) {
            if ((this.AIXOperationCompleted == null)) {
                this.AIXOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAIXOperationCompleted);
            }
            this.InvokeAsync("AIX", new object[] {
                        DataSource,
                        Company,
                        Aplication,
                        DataBase,
                        Parameters,
                        IpRequest,
                        User}, this.AIXOperationCompleted, userState);
        }
        
        private void OnAIXOperationCompleted(object arg) {
            if ((this.AIXCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AIXCompleted(this, new AIXCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XML_AIX_WEB", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string XML_AIX_WEB(string xml) {
            object[] results = this.Invoke("XML_AIX_WEB", new object[] {
                        xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void XML_AIX_WEBAsync(string xml) {
            this.XML_AIX_WEBAsync(xml, null);
        }
        
        /// <remarks/>
        public void XML_AIX_WEBAsync(string xml, object userState) {
            if ((this.XML_AIX_WEBOperationCompleted == null)) {
                this.XML_AIX_WEBOperationCompleted = new System.Threading.SendOrPostCallback(this.OnXML_AIX_WEBOperationCompleted);
            }
            this.InvokeAsync("XML_AIX_WEB", new object[] {
                        xml}, this.XML_AIX_WEBOperationCompleted, userState);
        }
        
        private void OnXML_AIX_WEBOperationCompleted(object arg) {
            if ((this.XML_AIX_WEBCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XML_AIX_WEBCompleted(this, new XML_AIX_WEBCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AS4", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AS4(string DataSource, string Company, string Program, string Library, string Parameters, string IpRequest, string User) {
            object[] results = this.Invoke("AS4", new object[] {
                        DataSource,
                        Company,
                        Program,
                        Library,
                        Parameters,
                        IpRequest,
                        User});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void AS4Async(string DataSource, string Company, string Program, string Library, string Parameters, string IpRequest, string User) {
            this.AS4Async(DataSource, Company, Program, Library, Parameters, IpRequest, User, null);
        }
        
        /// <remarks/>
        public void AS4Async(string DataSource, string Company, string Program, string Library, string Parameters, string IpRequest, string User, object userState) {
            if ((this.AS4OperationCompleted == null)) {
                this.AS4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnAS4OperationCompleted);
            }
            this.InvokeAsync("AS4", new object[] {
                        DataSource,
                        Company,
                        Program,
                        Library,
                        Parameters,
                        IpRequest,
                        User}, this.AS4OperationCompleted, userState);
        }
        
        private void OnAS4OperationCompleted(object arg) {
            if ((this.AS4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AS4Completed(this, new AS4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/XML_AS4", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string XML_AS4(string Xml) {
            object[] results = this.Invoke("XML_AS4", new object[] {
                        Xml});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void XML_AS4Async(string Xml) {
            this.XML_AS4Async(Xml, null);
        }
        
        /// <remarks/>
        public void XML_AS4Async(string Xml, object userState) {
            if ((this.XML_AS4OperationCompleted == null)) {
                this.XML_AS4OperationCompleted = new System.Threading.SendOrPostCallback(this.OnXML_AS4OperationCompleted);
            }
            this.InvokeAsync("XML_AS4", new object[] {
                        Xml}, this.XML_AS4OperationCompleted, userState);
        }
        
        private void OnXML_AS4OperationCompleted(object arg) {
            if ((this.XML_AS4Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.XML_AS4Completed(this, new XML_AS4CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AIX_WEBCompletedEventHandler(object sender, AIX_WEBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AIX_WEBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AIX_WEBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AIXCompletedEventHandler(object sender, AIXCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AIXCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AIXCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void XML_AIX_WEBCompletedEventHandler(object sender, XML_AIX_WEBCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XML_AIX_WEBCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XML_AIX_WEBCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void AS4CompletedEventHandler(object sender, AS4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AS4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AS4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    public delegate void XML_AS4CompletedEventHandler(object sender, XML_AS4CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.8.3761.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class XML_AS4CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal XML_AS4CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591